package com.android.groupstudy.lib;import java.util.HashMap;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;public class DatabaseHandler extends SQLiteOpenHelper {	// All Static variables	// Database Version	private static final int DATABASE_VERSION = 2;	// Database Name	private static final String DATABASE_NAME = "android_api";	// Login table name	private static final String TABLE_LOGIN = "login";		// Group table name    private static final String TABLE_GROUP = "group";	// Login Table Columns names	private static final String KEY_ID = "id";	private static final String KEY_EMAIL = "email";	private static final String KEY_NAME = "name";	private static final String KEY_BIRTH = "birth";	private static final String KEY_PHONENUM = "phonenum";	private static final String KEY_UID = "uid";	private static final String KEY_CREATED_AT = "created_at";	// Group Table Columns names	private static final String KEY_UGID = "ugid";	private static final String KEY_GNAME = "gname";	private static final String KEY_MEMBERS = "members";	private static final String KEY_PENALTY = "penalty";	private static final String KEY_GID = "gid";	private static final String KEY_GCREATED_AT = "created_at";	public DatabaseHandler(Context context) {		super(context, DATABASE_NAME, null, DATABASE_VERSION);	}	// Creating Tables	@Override	public void onCreate(SQLiteDatabase db) {		String CREATE_LOGIN_TABLE = "CREATE TABLE IF NOT EXISTS " + TABLE_LOGIN				+ "(" + KEY_ID + " INTEGER PRIMARY KEY," + KEY_EMAIL				+ " TEXT UNIQUE," + KEY_NAME + " TEXT," + KEY_BIRTH + " TEXT,"				+ KEY_PHONENUM + " TEXT," + KEY_UID + " TEXT," + KEY_CREATED_AT				+ " TEXT" + ")";				String CREATE_GROUP_TABLE = "CREATE TABLE IF NOT EXISTS " + TABLE_GROUP + "("                + KEY_UGID + " INTEGER PRIMARY KEY,"                + KEY_GNAME + " TEXT UNIQUE,"                + KEY_MEMBERS + " TEXT,"                + KEY_PENALTY + " TEXT,"                + KEY_GID + " TEXT,"                + KEY_GCREATED_AT + " TEXT" + ")";				db.execSQL(CREATE_LOGIN_TABLE);		db.execSQL(CREATE_GROUP_TABLE);	}	// Upgrading database	@Override	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {		// Drop older table if existed		db.execSQL("DROP TABLE IF EXISTS " + TABLE_LOGIN);		db.execSQL("DROP TABLE IF EXISTS " + TABLE_GROUP);		// Create tables again		onCreate(db);	}	/**	 * Storing user details in database	 * */	public void addUser(String email, String name, String birth,			String phonenum, String uid, String created_at) {		SQLiteDatabase db = this.getWritableDatabase();		ContentValues values = new ContentValues();		values.put(KEY_EMAIL, email); // Email		values.put(KEY_NAME, name); // Name		values.put(KEY_BIRTH, birth); // Birth		values.put(KEY_PHONENUM, phonenum); // Phonenum		values.put(KEY_UID, uid); // Email		values.put(KEY_CREATED_AT, created_at); // Created At		// Inserting Row		db.insert(TABLE_LOGIN, null, values);		db.close(); // Closing database connection	}	/**	 * Getting user data from database	 * */	public HashMap<String, String> getUserDetails() {		HashMap<String, String> user = new HashMap<String, String>();		String selectQuery = "SELECT  * FROM " + TABLE_LOGIN;		SQLiteDatabase db = this.getReadableDatabase();		Cursor cursor = db.rawQuery(selectQuery, null);		// Move to first row		cursor.moveToFirst();		if (cursor.getCount() > 0) {			user.put("email", cursor.getString(1));			user.put("name", cursor.getString(2));			user.put("birth", cursor.getString(3));			user.put("phonenum", cursor.getString(4));			user.put("uid", cursor.getString(5));			user.put("created_at", cursor.getString(6));		}		cursor.close();		db.close();		// return user		return user;	}		/**     * Storing group details in database     * */    public void addGroup(String gname, String members, String gid, String created_at) {        SQLiteDatabase db = this.getWritableDatabase();         ContentValues values = new ContentValues();        values.put(KEY_GNAME, gname); // Group name        values.put(KEY_MEMBERS, members); // members        values.put(KEY_GID, gid); // gid        values.put(KEY_GCREATED_AT, created_at); // Created At         // Inserting Row        db.insert(TABLE_GROUP, null, values);        db.close(); // Closing database connection    }	/**	 * Getting user login status return true if rows are there in table	 * */	public int getRowCount() {		String countQuery = "SELECT  * FROM " + TABLE_LOGIN;		SQLiteDatabase db = this.getReadableDatabase();		Cursor cursor = db.rawQuery(countQuery, null);		int rowCount = cursor.getCount();		db.close();		cursor.close();		// return row count		return rowCount;	}	/**	 * Re crate database Delete all tables and create them again	 * */	public void resetTables() {		SQLiteDatabase db = this.getWritableDatabase();		// Delete All Rows		db.delete(TABLE_LOGIN, null, null);		db.close();	}		public void resetGroupTables(){        SQLiteDatabase db = this.getWritableDatabase();        // Delete All Rows        db.delete(TABLE_GROUP, null, null);        db.close();    }}